- name: generate SSH key
  hosts: local
  tasks:
    - name: generate SSH users key 
      openssh_keypair:
        path: "./ssh_keys/{{ item }}"
        type: ed25519
        state: present
        comment: "key for {{ item }}, generated by ansible"
      loop: "{{ users }}"
- name: Task for web and db
  hosts: web,db
  tasks:
    - name: Add users
      user:
        name: "{{ item }}"
        comment: "User {{ item }}"
        shell: /bin/bash
      loop: "{{ users }}"

    - name: Add authorized_keys for users
      authorized_key:
        user: "{{ item }}"
        state: present
        key: "{{ lookup('file','./ssh_keys/' + item + '.pub') }}"
      loop: "{{ users }}" 

    - name: Install bind-utils on CentOS
      package:
        name: bind-utils
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Update apt cache
      apt:
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: Install bind-utils on Debian
      package:
        name: bind9-utils
        state: present
      when: ansible_facts['os_family'] == "Debian"

    - name: copy motd to all machines
      template:
        src: motd.j2
        dest: /etc/motd
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      tags: motd

    - name: firewall CentOS
      include_tasks: centos_firewall.yaml
      when: ansible_facts['os_family'] == "RedHat"
      tags: firewall
      
    - name: firewall Ubuntu
      include_tasks: ubuntu_firewall.yaml
      when: ansible_facts['os_family'] == "Debian"
      tags: firewall

- name: Role for web
  hosts: web
  pre_tasks:
    - name: Test message
      debug:
        msg: "test"
      tags: docker
  roles:
    - { role: 'geerlingguy.docker', tags: 'docker' }
    
  tasks:
    - name: Install required packages
      apt:
        pkg:
          - python3-pip
          - python3-setuptools
        state: latest
        update_cache: true
      tags: docker_run
      
    - name: install docker python module
      pip:
        name: docker
      tags: docker_run
      
    - name: pull nginx image
      community.docker.docker_image:
        name: nginx:latest
        source: pull
        tags: docker_run

    - name: run nginx container
      community.docker.docker_container:
        name: nginx
        image: nginx:latest
        state: started
        tags: docker_run